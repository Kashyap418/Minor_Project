{"ast":null,"code":"var _jsxFileName = \"D:\\\\Home\\\\Minor-Project-main\\\\Minor-Project-main\\\\front-end\\\\src\\\\Components\\\\Statewise.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nvar options = {\n  indexAxis: 'y',\n  scales: {\n    x: {\n      min: 0,\n      max: 450000\n    }\n  },\n  elements: {\n    bar: {\n      borderWidth: 2\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'right'\n    },\n    title: {\n      display: true,\n      text: 'State Wise Display'\n    }\n  }\n};\nconst SWG = () => {\n  _s();\n  const [data, setData] = useState({\n    labels: ['Chandigarh', 'Delhi', 'Haryana', 'Himachal Pradesh', 'J&K', 'Punjab', 'Rajasthan', 'Uttar Pradesh', 'Uttrakhand', 'Northern Region', 'Chattisgarh', 'Gujarat', 'Madhya Pradesh', 'Maharashtra', 'Daman & Diu', 'Goa', 'Western Region', 'Andhra Pradesh', 'Telangana', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Puducherry', 'Lakshwadeep', 'Southern Region', 'Bihar', 'DVC', 'Jharkhand', 'Odisha', 'West Bengal', 'Sikkim', 'Andaman & Nicobar', 'Eastern Region', 'Arunachal Pradesh', 'Assam', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Tripura', 'Nort Eastern Region'],\n    datasets: [{\n      label: 'Dataset 1',\n      data: [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(25, 90, 13, 0.5)'\n    }, {\n      label: 'Dataset 2',\n      data: [],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://script.google.com/macros/s/AKfycbzIn-T8v0E9F0Tzeu1tgNB992LhaWskEucxLb01bGiggiZoO--GLFQai3Q9B_jdZ3Dt5g/exec';\n      const dataSet1 = [];\n      const dataSet2 = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        let datanew = res['data'];\n        datanew = datanew.slice(0, datanew.length - 1);\n        console.log(datanew);\n        for (const val of datanew) {\n          console.log(val);\n          dataSet1.push(val.Energy_Required);\n          dataSet2.push(val.Energy_Supplied);\n        }\n        setData({\n          labels: ['Chandigarh', 'Delhi', 'Haryana', 'Himachal Pradesh', 'J&K', 'Punjab', 'Rajasthan', 'Uttar Pradesh', 'Uttrakhand', 'Northern Region', 'Chattisgarh', 'Gujarat', 'Madhya Pradesh', 'Maharashtra', 'Daman & Diu', 'Goa', 'Western Region', 'Andhra Pradesh', 'Telangana', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Puducherry', 'Lakshwadeep', 'Southern Region', 'Bihar', 'DVC', 'Jharkhand', 'Odisha', 'West Bengal', 'Sikkim', 'Andaman & Nicobar', 'Eastern Region', 'Arunachal Pradesh', 'Assam', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Tripura', 'Nort Eastern Region'],\n          datasets: [{\n            label: 'Energy Required State-Wise (MU)',\n            data: dataSet1,\n            borderColor: 'blue',\n            backgroundColor: '#1E90FF'\n          }, {\n            label: 'Energy Supplied State-Wise (MU)',\n            data: dataSet2,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 235, 0.5)'\n          }]\n        });\n        console.log(\"arrData\", dataSet1, dataSet2);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"backgroundColor\": \"White\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(SWG, \"cKWBnvCxDz1nfmEdYzplMj0VzK0=\");\n_c = SWG;\nexport default SWG;\nvar _c;\n$RefreshReg$(_c, \"SWG\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","options","indexAxis","scales","x","min","max","elements","bar","borderWidth","responsive","plugins","legend","position","title","display","text","SWG","_s","data","setData","labels","datasets","label","borderColor","backgroundColor","fetchData","url","dataSet1","dataSet2","fetch","then","console","log","res","json","datanew","slice","length","val","push","Energy_Required","Energy_Supplied","catch","e","style","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Home/Minor-Project-main/Minor-Project-main/front-end/src/Components/Statewise.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nimport { Bar } from 'react-chartjs-2';\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\nvar options = {\n  indexAxis: 'y',\n  scales: {\n    x:{\n      min:0,\n      max:450000\n    },\n  },\n  elements: {\n    bar: {\n      borderWidth: 2,\n    },\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'right',\n    },\n    title: {\n      display: true,\n      text: 'State Wise Display',\n    },\n  },\n};\n\nconst SWG = () => {\n  const [data, setData] = useState({\n    labels: ['Chandigarh', 'Delhi', 'Haryana', 'Himachal Pradesh', 'J&K', 'Punjab', 'Rajasthan', 'Uttar Pradesh', 'Uttrakhand', 'Northern Region', 'Chattisgarh', 'Gujarat', 'Madhya Pradesh', 'Maharashtra', 'Daman & Diu', 'Goa', 'Western Region', 'Andhra Pradesh', 'Telangana', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Puducherry', 'Lakshwadeep', 'Southern Region', 'Bihar', 'DVC', 'Jharkhand', 'Odisha', 'West Bengal', 'Sikkim', 'Andaman & Nicobar', 'Eastern Region', 'Arunachal Pradesh', 'Assam', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Tripura', 'Nort Eastern Region'],\n    datasets: [\n      {\n        label: 'Dataset 1',\n        data: [],\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(25, 90, 13, 0.5)',\n      },\n      {\n        label: 'Dataset 2',\n        data: [],\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n    ],\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://script.google.com/macros/s/AKfycbzIn-T8v0E9F0Tzeu1tgNB992LhaWskEucxLb01bGiggiZoO--GLFQai3Q9B_jdZ3Dt5g/exec';\n      const dataSet1 = [];\n      const dataSet2 = [];\n      await fetch(url).then((data) => {\n        console.log(\"Api data\", data)\n        const res = data.json();\n        return res\n      }).then((res) => {\n        let datanew = res['data'];\n        datanew = datanew.slice(0,datanew.length-1);\n        console.log(datanew);\n        for (const val of datanew) {\n          console.log(val);\n          dataSet1.push(val.Energy_Required);\n          dataSet2.push(val.Energy_Supplied);\n        }\n        setData({\n          labels: ['Chandigarh', 'Delhi', 'Haryana', 'Himachal Pradesh', 'J&K', 'Punjab', 'Rajasthan', 'Uttar Pradesh', 'Uttrakhand', 'Northern Region', 'Chattisgarh', 'Gujarat', 'Madhya Pradesh', 'Maharashtra', 'Daman & Diu', 'Goa', 'Western Region', 'Andhra Pradesh', 'Telangana', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Puducherry', 'Lakshwadeep', 'Southern Region', 'Bihar', 'DVC', 'Jharkhand', 'Odisha', 'West Bengal', 'Sikkim', 'Andaman & Nicobar', 'Eastern Region', 'Arunachal Pradesh', 'Assam', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland', 'Tripura', 'Nort Eastern Region'],\n          datasets: [\n            {\n              label: 'Energy Required State-Wise (MU)',\n              data: dataSet1,\n              borderColor: 'blue',\n              backgroundColor: '#1E90FF',\n            },\n            {\n              label: 'Energy Supplied State-Wise (MU)',\n              data: dataSet2,\n              borderColor: 'rgb(53, 162, 235)',\n              backgroundColor: 'rgba(53, 235, 0.5)',\n            },\n          ],\n        })\n        console.log(\"arrData\", dataSet1, dataSet2)\n      }).catch(e => {\n        console.log(\"error\", e)\n      })\n    }\n\n    fetchData();\n  }, [])\n\n  return (\n    <div style={{ \"backgroundColor\": \"White\" }}>\n      <div style={{ width: '100%', height: '100%' }}>\n        <Bar data={data} options={options} />\n      </div>\n    </div>)\n\n}\nexport default SWG;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}