{"ast":null,"code":"var _jsxFileName = \"D:\\\\Home\\\\Minor-Project-main\\\\Minor-Project-main\\\\front-end\\\\src\\\\Components\\\\Yearwise.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  indexAxis: 'y',\n  elements: {\n    bar: {\n      borderWidth: 2\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'right'\n    },\n    title: {\n      display: true\n    }\n  }\n};\nconst Horizontalchart = () => {\n  _s();\n  const [data, setData] = useState({\n    labels: ['2012-13', '2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20', '2020-21', '2021-22', '2022-23', '2023-24'],\n    datasets: [{\n      label: 'Dataset 1',\n      data: [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(25, 90, 13, 0.5)'\n    }, {\n      label: 'Dataset 2',\n      data: [],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://script.google.com/macros/s/AKfycbygurSv50sNgj5xQfUehrbbcTYItHZcH7SH2yzLi6qz9lXtqvn5zRenEid-Eg3OX1pLJQ/exec';\n      console.log(url);\n      const dataSet1 = [];\n      const dataSet2 = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n        const datanew = res['data'];\n        for (const val of datanew) {\n          console.log(val);\n          dataSet1.push(val.percentage_of_growth);\n          dataSet2.push(val.Total_Generation);\n        }\n        setData({\n          labels: ['2012-13', '2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20', '2020-21', '2021-22', '2022-23', '2023-24'],\n          datasets: [{\n            label: 'Percentage Of Growth',\n            data: dataSet1,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: '#FFD700'\n          }, {\n            label: 'Total Generation (BU)',\n            data: dataSet2,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 235, 0.5)'\n          }]\n        });\n        console.log(\"arrData\", dataSet1, dataSet2);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"backgroundColor\": \"White\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '87%',\n        height: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Horizontalchart, \"jjm20yHxI3dfbqECLmOS7+/YlHY=\");\n_c = Horizontalchart;\nexport default Horizontalchart;\nvar _c;\n$RefreshReg$(_c, \"Horizontalchart\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","title","display","Horizontalchart","_s","data","setData","labels","datasets","label","borderColor","backgroundColor","fetchData","url","console","log","dataSet1","dataSet2","fetch","then","res","json","datanew","val","push","percentage_of_growth","Total_Generation","catch","e","style","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Home/Minor-Project-main/Minor-Project-main/front-end/src/Components/Yearwise.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\nimport { Bar } from 'react-chartjs-2';\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n  );\nconst options = {\n    indexAxis: 'y',\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n      },\n      title: {\n        display: true,\n\n      },\n    },\n  };\n\nconst Horizontalchart =() => {\n    const [data, setData] = useState({\n        labels:['2012-13','2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19','2019-20', '2020-21', '2021-22','2022-23','2023-24'],\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data:[],\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(25, 90, 13, 0.5)',\n          },\n          {\n            label: 'Dataset 2',\n            data:[],\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n        ],\n      });\n    useEffect(()=> {\n       const fetchData= async()=> {\n          const url = 'https://script.google.com/macros/s/AKfycbygurSv50sNgj5xQfUehrbbcTYItHZcH7SH2yzLi6qz9lXtqvn5zRenEid-Eg3OX1pLJQ/exec';\n          console.log(url);\n           const dataSet1 = [];\n           const dataSet2 = [];\n         await fetch(url).then((data)=> {\n             console.log(\"Api data\", data)\n             const res = data.json();\n             return res\n         }).then((res) => {\n             console.log(\"ressss\", res)\n             const datanew = res['data'];\n            for (const val of datanew) {\n                console.log(val);\n                dataSet1.push(val.percentage_of_growth);\n                dataSet2.push(val.Total_Generation);\n            }\n            setData({\n                labels:['2012-13','2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19','2019-20', '2020-21', '2021-22','2022-23','2023-24'],\n                datasets: [\n                  {\n                    label: 'Percentage Of Growth',\n                    data:dataSet1,\n                    borderColor: 'rgb(255, 99, 132)',\n                    backgroundColor: '#FFD700',\n                  },\n                  {\n                    label: 'Total Generation (BU)',\n                    data:dataSet2,\n                    borderColor: 'rgb(53, 162, 235)',\n                    backgroundColor: 'rgba(53, 235, 0.5)',\n                  },\n                ],\n              })\n            console.log(\"arrData\", dataSet1, dataSet2)\n         }).catch(e => {\n                console.log(\"error\", e)\n            })\n        }\n        \n        fetchData();\n    },[])\n   \n    return(\n        <div style={{\"backgroundColor\":\"White\"}}>\n        <div style={{width:'87%', height:'50%'}}>\n            <Bar data={data} options={options}/>\n         </div>\n         </div>\n         )\n}\nexport default Horizontalchart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}